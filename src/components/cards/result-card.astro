---
import type { Result } from "@/constants/results";
import GlowEffect from "../common/glow-effect.astro";
import tw from "@/utils/tw";
import { Icon } from "../common/icon";

interface Props {
  result: Result;
}

const lightSchemeClasses = {
  figure: tw`bg-black`,
};

const darkSchemeClasses = {
  figure: tw`dark:bg-brand-white dark:shadow-[0_0_55px_15px_rgba(255,255,255,0.4)] dark:transition-shadow dark:duration-500 dark:ease-in-out dark:before:absolute dark:before:inset-0 dark:before:rounded-[inherit] dark:before:shadow-[0_0_5px_2px_rgba(255,255,255,0.5)] dark:before:content-[''] dark:group-hover:shadow-[0_0_45px_28px_rgba(255,255,255,0.6)]`,
};

const { result } = Astro.props;
---

<GlowEffect>
  <article class="group relative h-full overflow-hidden rounded-xl p-5">
    <figure
      class={tw`relative flex size-10 items-center justify-center rounded-xl ${lightSchemeClasses.figure} ${darkSchemeClasses.figure}`}
    >
      <Icon
        icon={result.icon}
        className="size-5 shrink-0 fill-white dark:fill-black"
      />
    </figure>

    <h3 class="mb-2 mt-4 text-black dark:text-white">{result.title}</h3>

    <p class="text-sm text-brand-gray">{result.description}</p>

    <div
      class="absolute left-2 top-1 -z-10 size-full opacity-0 transition-opacity duration-200 group-hover:opacity-100"
    >
      <div
        class="absolute size-full bg-matrix-pattern invert-[85%] dark:invert-0"
      >
      </div>
      <div
        class="absolute size-full bg-gradient-to-b from-transparent via-white to-white dark:from-black/5 dark:via-black/5 dark:to-black"
      >
      </div>
    </div>
  </article>
</GlowEffect>
