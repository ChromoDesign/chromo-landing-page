---
import { SECTIONS_LIST, SECTIONS } from "@/constants/sections";
import AlamoLogo from "@/components/common/alamo-logo.astro";
import Icon from "../common/icon.astro";
import { Link } from "../common/link";

const sectionLinks = SECTIONS_LIST.filter(
  (section) => section.id !== SECTIONS.CONTACT.id,
);
---

<header
  class="sticky left-0 top-0 z-50 mb-10 border-b-2 border-dashed p-5 transition duration-200"
  id="header"
>
  <div class="container mx-auto flex items-center justify-between gap-5">
    <AlamoLogo />

    <nav class="hidden grow lg:block">
      <ul class="flex items-center gap-5">
        {
          sectionLinks.map(({ href, title, svg }) => (
            <li>
              <Link
                href={href}
                className="flex items-center gap-2"
                variant="link"
              >
                <Icon icon={svg} class="size-6 fill-current" />
                {title}
              </Link>
            </li>
          ))
        }
      </ul>
    </nav>

    <Link href={SECTIONS.CONTACT.href}> Let's chat </Link>
  </div>
</header>

<script>
  const header = document.getElementById("header")!;
  const scrollThreshold = 100;
  const notScrolledClasses: string[] =
    "border-brand-gray/35 bg-white dark:bg-background-dark".split(" ");
  const scrolledClasses: string[] =
    "backdrop-blur-xl bg-white/50 dark:bg-brand-gray/10 border-transparent".split(
      " ",
    );

  window.addEventListener("load", function () {
    if (window.scrollY > scrollThreshold) {
      header.classList.add(...scrolledClasses);
    } else {
      header.classList.add(...notScrolledClasses);
    }
  });

  window.addEventListener("scroll", function () {
    if (window.scrollY > scrollThreshold * 15) return; // optimization

    if (window.scrollY > scrollThreshold) {
      header.classList.remove(...notScrolledClasses);
      header.classList.add(...scrolledClasses);
    } else {
      header.classList.add(...notScrolledClasses);
      header.classList.remove(...scrolledClasses);
    }
  });
</script>
