---
import kidStarSvg from "@material-symbols/svg-400/rounded/kid_star-fill.svg?raw";
import formatIconSvg from "@material-symbols/svg-400/rounded/format_quote-fill.svg?raw";
import type { Testimonial } from "@/constants/testimonials";
import GlowEffect from "../common/glow-effect.astro";
import { Icon } from "../common/icon";

interface Props {
  testimonial: Testimonial;
}

const { testimonial } = Astro.props;

const stars = [...Array(5)].map((_, index) => index + 1);
---

<div class="h-full rounded-xl *:h-full dark:bg-black">
  <GlowEffect>
    <article class="p-5 text-black dark:text-brand-white">
      <div class="mb-24 space-y-1.5">
        <div class="flex items-center justify-between gap-2">
          <h3 class="text-base">{testimonial.name}</h3>
          <ul class="flex gap-0.5">
            {
              stars.map(() => (
                <li>
                  <Icon icon={kidStarSvg} className="size-5 fill-amber-400" />
                </li>
              ))
            }
          </ul>
        </div>
        <a
          class="text-sm text-brand-gray transition-colors duration-200 hover:text-black dark:hover:text-white"
          target="_blank"
          rel="noopener noreferrer"
          href={"https://" + testimonial.website}
        >
          {testimonial.website}
        </a>
      </div>

      <div class="space-y-2.5">
        <Icon
          icon={formatIconSvg}
          className="size-7 rotate-180 fill-brand-gray"
        />

        <p class="text-sm">{testimonial.description}</p>
      </div>
    </article>
  </GlowEffect>
</div>
